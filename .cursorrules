# PandaAI - Plateforme d'apprentissage IA avec pandas kawaii

## Architecture & Stack Technique

### Frontend
- **Framework**: Next.js 14 (App Router)
- **Styling**: Tailwind CSS avec design pastel/kawaii
- **State Management**: Zustand pour l'√©tat global
- **Forms**: React Hook Form
- **Data Fetching**: TanStack Query (React Query)
- **Authentification**: Clerk (free tier)

### Backend & Data
- **Base de donn√©es**: Supabase (PostgreSQL + Storage)
- **ORM**: Prisma
- **API**: tRPC ou Next.js API Routes
- **LLM**: Hugging Face Inference API (free tier)

### D√©ploiement
- **Hosting**: Vercel (hobby tier gratuit)
- **CI/CD**: GitHub Actions
- **Analytics**: Vercel Analytics

## Design System & UI/UX

### Palette de couleurs
- **Primaire**: Violet pastel (#B794F6, #9F7AEA)
- **Secondaire**: Rose pastel (#F687B3, #ED64A6)
- **Accent**: Vert pastel (#9AE6B4, #68D391)
- **Neutre**: Gris pastel (#E2E8F0, #CBD5E0)
- **Fond**: Blanc cass√© (#FEFEFE, #F7FAFC)

### Typographie
- **Primaire**: Inter (clean, moderne)
- **Secondaire**: Poppins (pour les titres kawaii)
- **Tailles**: text-xs √† text-6xl avec √©chelle harmonieuse

### Composants kawaii
- Coins arrondis g√©n√©reux (rounded-2xl, rounded-3xl)
- Ombres douces (shadow-lg, shadow-xl)
- Animations subtiles (hover, focus, loading)
- Illustrations panda int√©gr√©es
- Micro-interactions d√©licates

## Fonctionnalit√©s Principales

### üè† Dashboard "Ma For√™t Pandatique"
- Vue d'ensemble color√©e (statuts, XP, points)
- "Panda du jour" : mini-challenge al√©atoire
- Compte √† rebours hackathon (19 juillet)

### üìö Apprentissage
- G√©n√©ration de cours IA √† partir de syllabus/URL
- Panda-Coach : agent IA pour plans d'√©tude
- Spaced Repetition avec flashcards kawaii

### üñãÔ∏è Pratique & Quiz
- Import PDF/Word ‚Üí quiz automatiques
- Exercices corrig√©s pas-√†-pas par IA
- Mode examen blanc avec minuterie

### üìä Analytics & Suivi
- Tableau de bord de progression
- Classement "Panda Leaderboard"
- Insights IA personnalis√©s

### üí¨ Social & Communaut√©
- Chatbot PandaAI 24/7
- Study Rooms vid√©o + tableau blanc
- Forum "Sous-bois" par mati√®re

### üêº Profil & Gamification
- Avatars pandas personnalisables
- Badges et succ√®s
- Portefeuille de r√©alisations

## R√®gles de D√©veloppement

### Code Quality
- **TypeScript obligatoire** avec strict mode
- **ESLint + Prettier** configur√©s
- **Husky** pour pre-commit hooks
- **Tests**: Jest + React Testing Library
- **Naming**: camelCase pour variables, PascalCase pour composants

### Performance
- **Lazy loading** des composants lourds
- **Image optimization** avec next/image
- **Bundle splitting** automatique
- **Memoization** avec React.memo, useMemo, useCallback

### Responsive Design
- **Mobile-first** approach
- **Breakpoints**: sm (640px), md (768px), lg (1024px), xl (1280px)
- **Grid system**: CSS Grid + Flexbox
- **Touch-friendly**: boutons minimum 44px
- **Accessibilit√©**: ARIA labels, contraste, navigation clavier

### Structure des Composants
```
/components
  /ui (primitives Tailwind)
    /Button
    /Input
    /Modal
    /Card
  /features (logique m√©tier)
    /Dashboard
    /Quiz
    /Profile
  /layout
    /Header
    /Sidebar
    /Footer
```

### API & Data
- **Validation**: Zod pour sch√©mas TypeScript
- **Error handling**: Try/catch avec messages utilisateur
- **Loading states**: Skeleletons coh√©rents
- **Caching**: React Query avec stale-while-revalidate
- **Optimistic updates** pour UX fluide

### Animations & Interactions
- **Framer Motion** pour animations complexes
- **Tailwind animations** pour micro-interactions
- **Transitions**: ease-in-out, dur√©es courtes (200-300ms)
- **Feedback visuel**: loading spinners, success states
- **Gestures**: swipe, drag pour mobile

### S√©curit√©
- **Sanitization** des inputs utilisateur
- **Rate limiting** sur API routes
- **CSP headers** configur√©s
- **HTTPS only** en production
- **Validation c√¥t√© serveur** syst√©matique

## Patterns & Conventions

### Hooks personnalis√©s
- `useAuth()` pour gestion utilisateur
- `usePandaAvatar()` pour personnalisation
- `useQuizGenerator()` pour g√©n√©ration IA
- `useSpacedRepetition()` pour algorithme SRS

### Store Zustand
```typescript
interface AppState {
  user: User | null
  pandaAvatar: PandaConfig
  currentQuiz: Quiz | null
  studyStreak: number
  notifications: Notification[]
}
```

### Gestion d'erreurs
- **Error boundaries** React
- **Toast notifications** pour feedback
- **Fallbacks** gracieux
- **Retry mechanisms** automatiques

### Internationalisation
- **next-i18next** pour FR/EN
- **Pluralisation** correcte
- **Formatage dates/nombres** selon locale

## Contraintes Techniques

### Performance Targets
- **Lighthouse score**: 90+ sur toutes les m√©triques
- **First Contentful Paint**: < 2s
- **Time to Interactive**: < 3s
- **Core Web Vitals**: Excellent

### Compatibilit√©
- **Navigateurs**: Chrome 90+, Firefox 88+, Safari 14+
- **Mobiles**: iOS 14+, Android 10+
- **Accessibilit√©**: WCAG 2.1 AA minimum

### Limites Free Tier
- **Clerk**: 10,000 utilisateurs actifs/mois
- **Supabase**: 500 MB storage, 2GB bandwidth
- **Vercel**: 100 GB bandwidth, 1000 serverless functions
- **Hugging Face**: 30K tokens/mois

## Workflow de D√©veloppement

### Git Flow
- **main**: production
- **develop**: int√©gration
- **feature/***: nouvelles fonctionnalit√©s
- **hotfix/***: corrections urgentes

### Commit Messages
```
feat: ajoute g√©n√©ration quiz IA
fix: corrige responsive dashboard mobile
style: am√©liore animations panda
docs: met √† jour README API
```

### D√©ploiement
- **Preview**: automatique sur chaque PR
- **Staging**: d√©ploiement sur merge develop
- **Production**: d√©ploiement manuel depuis main

## Priorit√©s MVP (12 jours)

### Sprint 1 (4 jours)
- Setup projet + auth Clerk
- Landing page responsive
- Dashboard de base
- Upload de documents

### Sprint 2 (4 jours)
- G√©n√©ration quiz IA
- Syst√®me de scoring
- Profil utilisateur
- Avatars pandas

### Sprint 3 (4 jours)
- Analytics de progression
- Spaced repetition
- Polish UI/UX
- D√©ploiement production

## Instructions Sp√©cifiques

### Toujours privil√©gier
1. **User Experience** avant tout
2. **Simplicit√©** dans l'impl√©mentation
3. **Performance** mobile
4. **Accessibilit√©** native
5. **Feedback** utilisateur imm√©diat

### √âviter absolument
- D√©pendances inutiles
- Over-engineering
- Animations trop lentes
- Design inconsistant
- Code dupliqu√©

---

**Objectif**: Cr√©er une exp√©rience d'apprentissage magique, motivante et efficace avec des pandas kawaii qui rendent l'√©tude addictive ! üêº‚ú®